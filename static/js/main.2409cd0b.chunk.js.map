{"version":3,"sources":["components/card/card.js","components/card-list/card-list.js","components/search-box/search-box.js","App.js","reportWebVitals.js","index.js"],"names":["Card","citizen","className","src","id","alt","name","company","bs","CardList","citizens","map","SearchBox","placeholder","handleChange","type","onChange","App","useState","setCitizens","search","setSearch","filteredCitizens","filter","toLowerCase","includes","useEffect","fetch","then","res","json","users","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAgBeA,EAbF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACd,OACE,sBAAKC,UAAU,OAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAQG,GAAlC,0BACHC,IAAI,WAEN,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,QAAQC,SCPbC,G,MAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OACE,qBAAKR,UAAU,YAAf,SACGQ,EAASC,KAAI,SAACV,GAAD,OACZ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,WCLdQ,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEZ,UAAU,YACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC4BDG,EA9BH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACTR,EADS,KACCS,EADD,OAEYD,mBAAS,IAFrB,mBAETE,EAFS,KAEDC,EAFC,KAIVC,EAAmBZ,EAASa,QAAO,SAACtB,GAAD,OACvCA,EAAQK,KAAKkB,cAAcC,SAASL,EAAOI,kBAa7C,OANAE,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAWZ,EAAYY,QAC9B,IAGD,sBAAK7B,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,kCACA,cAAC,EAAD,CACEW,YAAY,sBACZC,aAfe,SAACkB,GACpBX,EAAUW,EAAEC,OAAOC,UAgBjB,cAAC,EAAD,CAAUxB,SAAUY,QCpBXa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2409cd0b.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nconst Card = ({ citizen }) => {\n  return (\n    <div className='card'>\n      <img\n        src={`https://robohash.org/${citizen.id}?set=set5&size=180x180`}\n        alt='Person'\n      />\n      <h2>{citizen.name}</h2>\n      <p>{citizen.company.bs}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from '../card/card';\nimport './card-list.styles.css';\n\nexport const CardList = ({ citizens }) => {\n  return (\n    <div className='card-list'>\n      {citizens.map((citizen) => (\n        <Card key={citizen.id} citizen={citizen} />\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input\n      className='searchbar'\n      type='search'\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  );\n};\n","import { useState, useEffect } from 'react';\nimport './App.css';\n\nimport React from 'react';\nimport { CardList } from './components/card-list/card-list';\nimport { SearchBox } from './components/search-box/search-box';\n\nconst App = () => {\n  const [citizens, setCitizens] = useState([]);\n  const [search, setSearch] = useState('');\n\n  const filteredCitizens = citizens.filter((citizen) =>\n    citizen.name.toLowerCase().includes(search.toLowerCase())\n  );\n\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((res) => res.json())\n      .then((users) => setCitizens(users));\n  }, []);\n\n  return (\n    <div className='App'>\n      <h1 className='title'>Strangetown Citizens</h1>\n      <SearchBox\n        placeholder='Search for citizen!'\n        handleChange={handleChange}\n      />\n      <CardList citizens={filteredCitizens} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}